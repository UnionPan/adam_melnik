---
import BaseHead from '../components/BaseHead.astro';
import { SITE_TITLE } from '../consts';
import { readFile, readdir } from 'fs/promises';
import { resolve } from 'path';

const photoFolders = await readdir('public/photos', { withFileTypes: true })
	.then(entries => entries
		.filter(entry => entry.isDirectory())
		.map(entry => entry.name)
		.sort((a, b) => {
			// Put Street first, then alphabetical order for others
			if (a === 'Street') return -1;
			if (b === 'Street') return 1;
			return a.localeCompare(b);
		})
	);

// Read the markdown file
const aboutContent = await readFile(resolve(process.cwd(), 'src/content/about.md'), 'utf-8');

// Simple markdown to HTML conversion for basic formatting
function markdownToHtml(md: string): string {
  return md
    .replace(/^# (.+)$/gm, '<h1>$1</h1>')
    .replace(/^## (.+)$/gm, '<h2>$1</h2>')
    .replace(/^### (.+)$/gm, '<h3>$1</h3>')
    .replace(/^\- (.+)$/gm, '<li>$1</li>')
    .replace(/(<li>.*<\/li>)/gs, '<ul>$1</ul>')
    .replace(/\*\*(.+?)\*\*/g, '<strong>$1</strong>')
    // Handle font changes
    .replace(/\{font:([^}]+)\}(.+?)\{\/font\}/g, '<span style="font-family: $1;">$2</span>')
    .replace(/\{mono\}(.+?)\{\/mono\}/g, '<span style="font-family: \'droid-sans-mono\', \'Roboto Mono\', monospace;">$1</span>')
    .replace(/\{serif\}(.+?)\{\/serif\}/g, '<span style="font-family: \'Times New Roman\', Times, serif;">$1</span>')
    .replace(/\{sans\}(.+?)\{\/sans\}/g, '<span style="font-family: Arial, Helvetica, sans-serif;">$1</span>')
    // Handle images first (before links)
    .replace(/!\[(.+?)\]\(dist\/(.+?)\)/g, '<img src="/$2" alt="$1" style="max-width: 500px; border-radius: 8px; margin: 1rem auto; box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1); display: block;" />')
    .replace(/!\[(.+?)\]\((.+?)\)/g, '<img src="$2" alt="$1" style="max-width: 500px; border-radius: 8px; margin: 1rem auto; box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1); display: block;" />')
    // Handle image links that should display as images 
    .replace(/\[([^\]]*)\]\((dist\/[^)]+)\)/g, '<img src="/$2" alt="$1" style="max-width: 500px; border-radius: 8px; margin: 1rem auto; box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1); display: block;" />')
    .replace(/\[([^\]]*)\]\(([^)]+\.(jpg|png|gif|webp))\)/g, '<img src="$2" alt="$1" style="max-width: 500px; border-radius: 8px; margin: 1rem auto; box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1); display: block;" />')
    // Handle regular links
    .replace(/\[(.+?)\]\((.+?)\)/g, '<a href="$2" target="_blank">$1</a>')
    .replace(/\n\n/g, '</p><p>')
    .replace(/^(?!<[h|u|l|i])/gm, '<p>')
    .replace(/(?<![h|l|g]>)$/gm, '</p>')
    .replace(/<p><\/p>/g, '')
    .replace(/<p>---<\/p>/g, '<hr>');
}

const htmlContent = markdownToHtml(aboutContent);
---

<!doctype html>
<html lang="en">
	<head>
		<BaseHead title="About Adam Melnik" description="Learn more about Adam Melnik's journey as a lighting designer and passionate photographer" />
	</head>
	<body>
		<div class="homepage-container">
			<aside class="sidebar">
				<div class="sidebar-content">
					<h1><a href="/" class="site-title">Adam Melnik</a></h1>
					
					<nav class="main-nav">
						<ul>
							{photoFolders.map((folder) => (
								<li><a href={`/?category=${folder}`}>{folder === 'rock' ? 'Rock' : folder.replace(/_/g, ' ')}</a></li>
							))}
						</ul>
						
						<ul>
							<li><a href="/about" class="active">About Me</a></li>
							<li><a href="/contact">Contact</a></li>
						</ul>
					</nav>
					
				</div>
				
				<footer class="sidebar-footer">
					<a href="https://www.instagram.com/adammelnik/" target="_blank" class="social-link">
						<svg viewBox="0 0 16 16" aria-hidden="true" width="20" height="20">
							<path fill="currentColor" d="M8 0C5.829 0 5.556.01 4.703.048 3.85.088 3.269.222 2.76.42a3.917 3.917 0 0 0-1.417.923A3.927 3.927 0 0 0 .42 2.76C.222 3.268.087 3.85.048 4.7.01 5.555 0 5.827 0 8.001c0 2.172.01 2.444.048 3.297.04.852.174 1.433.372 1.942.205.526.478.972.923 1.417.444.445.89.719 1.416.923.51.198 1.09.333 1.942.372C5.555 15.99 5.827 16 8 16s2.444-.01 3.298-.048c.851-.04 1.434-.174 1.943-.372a3.916 3.916 0 0 0 1.416-.923c.445-.445.718-.891.923-1.417.197-.509.332-1.09.372-1.942C15.99 10.445 16 10.173 16 8s-.01-2.445-.048-3.299c-.04-.851-.175-1.433-.372-1.941a3.926 3.926 0 0 0-.923-1.417A3.911 3.911 0 0 0 13.24.42c-.51-.198-1.092-.333-1.943-.372C10.443.01 10.172 0 7.998 0h.003zm-.717 1.442h.718c2.136 0 2.389.007 3.232.046.78.035 1.204.166 1.486.275.374.145.64.319.92.599.28.28.453.546.598.92.11.281.24.705.275 1.485.039.843.047 1.096.047 3.231s-.008 2.389-.047 3.232c-.035.78-.166 1.203-.275 1.485a2.47 2.47 0 0 1-.599.919c-.28.28-.546.453-.92.598-.28.11-.704.24-1.485.276-.843.038-1.096.047-3.232.047s-2.39-.009-3.233-.047c-.78-.036-1.203-.166-1.485-.276a2.478 2.478 0 0 1-.92-.598 2.48 2.48 0 0 1-.6-.92c-.109-.281-.24-.705-.275-1.485-.038-.843-.046-1.096-.046-3.233 0-2.136.008-2.388.046-3.231.036-.78.166-1.204.276-1.486.145-.373.319-.64.599-.92.28-.28.546-.453.92-.598.282-.11.705-.24 1.485-.276.738-.034 1.024-.044 2.515-.045v.002zm4.988 1.328a.96.96 0 1 0 0 1.92.96.96 0 0 0 0-1.92zm-4.27 1.122a4.109 4.109 0 1 0 0 8.217 4.109 4.109 0 0 0 0-8.217zm0 1.441a2.667 2.667 0 1 1 0 5.334 2.667 2.667 0 0 1 0-5.334z"></path>
						</svg>
						Instagram
					</a>
					all contents Â© 2025. all rights reserved.
				</footer>
			</aside>
			
			<main class="content-column">
				<div class="content-scroll">
					<div class="content-section" set:html={htmlContent}>
					</div>
				</div>
			</main>
		</div>
	</body>
</html>
